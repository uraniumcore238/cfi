{"uid":"414e6df91bc803cb","name":"Customer fill password with digits","fullName":"app.tests.test_registration_page#test_fill_password_with_digits","historyId":"178d47a90085f294dc55ad53b1bba001","time":{"start":1682960530335,"stop":1682960530335,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5585f290bfe3 <unknown>\n#1 0x5585f264ad36 <unknown>\n#2 0x5585f2673b20 <unknown>\n#3 0x5585f266fa9b <unknown>\n#4 0x5585f26b1af7 <unknown>\n#5 0x5585f26b111f <unknown>\n#6 0x5585f26a8693 <unknown>\n#7 0x5585f267b03a <unknown>\n#8 0x5585f267c17e <unknown>\n#9 0x5585f28cddbd <unknown>\n#10 0x5585f28d1c6c <unknown>\n#11 0x5585f28db4b0 <unknown>\n#12 0x5585f28d2d63 <unknown>\n#13 0x5585f28a5c35 <unknown>\n#14 0x5585f28f6138 <unknown>\n#15 0x5585f28f62c7 <unknown>\n#16 0x5585f2904093 <unknown>\n#17 0x7f0344cf3b43 <unknown>","statusTrace":"config = {'browser': 'chrome', 'headless': False, 'hub': 'localhost', 'remote': False, ...}\n\n    @pytest.fixture(scope=\"class\")\n    def wd(config):\n        if config[\"remote\"] is True:\n            driver = create_remote_driver(config)\n            driver.maximize_window()\n        else:\n>           driver = create_local_driver(config)\n\napp/tests/conftest.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napp/tests/conftest.py:100: in create_local_driver\n    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:80: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:104: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:286: in __init__\n    self.start_session(capabilities, browser_profile)\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:378: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3f5743b390>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...\\\\n#15 0x5585f28f62c7 \\\\u003Cunknown>\\\\n#16 0x5585f2904093 \\\\u003Cunknown>\\\\n#17 0x7f0344cf3b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x5585f290bfe3 <unknown>\nE       #1 0x5585f264ad36 <unknown>\nE       #2 0x5585f2673b20 <unknown>\nE       #3 0x5585f266fa9b <unknown>\nE       #4 0x5585f26b1af7 <unknown>\nE       #5 0x5585f26b111f <unknown>\nE       #6 0x5585f26a8693 <unknown>\nE       #7 0x5585f267b03a <unknown>\nE       #8 0x5585f267c17e <unknown>\nE       #9 0x5585f28cddbd <unknown>\nE       #10 0x5585f28d1c6c <unknown>\nE       #11 0x5585f28db4b0 <unknown>\nE       #12 0x5585f28d2d63 <unknown>\nE       #13 0x5585f28a5c35 <unknown>\nE       #14 0x5585f28f6138 <unknown>\nE       #15 0x5585f28f62c7 <unknown>\nE       #16 0x5585f2904093 <unknown>\nE       #17 0x7f0344cf3b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1682960491961,"stop":1682960492025,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"load_env","time":{"start":1682960492025,"stop":1682960492026,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"config","time":{"start":1682960492026,"stop":1682960492026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"wd","time":{"start":1682960530336,"stop":1682960530982,"duration":646},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5585f290bfe3 <unknown>\n#1 0x5585f264ad36 <unknown>\n#2 0x5585f2673b20 <unknown>\n#3 0x5585f266fa9b <unknown>\n#4 0x5585f26b1af7 <unknown>\n#5 0x5585f26b111f <unknown>\n#6 0x5585f26a8693 <unknown>\n#7 0x5585f267b03a <unknown>\n#8 0x5585f267c17e <unknown>\n#9 0x5585f28cddbd <unknown>\n#10 0x5585f28d1c6c <unknown>\n#11 0x5585f28db4b0 <unknown>\n#12 0x5585f28d2d63 <unknown>\n#13 0x5585f28a5c35 <unknown>\n#14 0x5585f28f6138 <unknown>\n#15 0x5585f28f62c7 <unknown>\n#16 0x5585f2904093 <unknown>\n#17 0x7f0344cf3b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1129, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 901, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cfi/cfi/app/tests/conftest.py\", line 129, in wd\n    driver = create_local_driver(config)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cfi/cfi/app/tests/conftest.py\", line 100, in create_local_driver\n    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 80, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 104, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 286, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 378, in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"afterStages":[],"labels":[{"name":"tag","value":"1.12"},{"name":"owner","value":"SergeiT"},{"name":"severity","value":"normal"},{"name":"feature","value":"Registration page"},{"name":"parentSuite","value":"app.tests"},{"name":"suite","value":"test_registration_page"},{"name":"host","value":"fv-az444-828"},{"name":"thread","value":"2500-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"app.tests.test_registration_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","owner":"SergeiT","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"1735219dccc418b6","reportUrl":"https://uraniumcore238.github.io/cfi/5//#testresult/1735219dccc418b6","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55e1c9208fe3 <unknown>\n#1 0x55e1c8f47d36 <unknown>\n#2 0x55e1c8f70b20 <unknown>\n#3 0x55e1c8f6ca9b <unknown>\n#4 0x55e1c8faeaf7 <unknown>\n#5 0x55e1c8fae11f <unknown>\n#6 0x55e1c8fa5693 <unknown>\n#7 0x55e1c8f7803a <unknown>\n#8 0x55e1c8f7917e <unknown>\n#9 0x55e1c91cadbd <unknown>\n#10 0x55e1c91cec6c <unknown>\n#11 0x55e1c91d84b0 <unknown>\n#12 0x55e1c91cfd63 <unknown>\n#13 0x55e1c91a2c35 <unknown>\n#14 0x55e1c91f3138 <unknown>\n#15 0x55e1c91f32c7 <unknown>\n#16 0x55e1c9201093 <unknown>\n#17 0x7f92de5a9b43 <unknown>","time":{"start":1682960302020,"stop":1682960302020,"duration":0}}]},"tags":["1.12"]},"source":"414e6df91bc803cb.json","parameterValues":[]}